# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
    paths:
    - 'static/files/citations/*.bib'
    - 'content/publication_list/_index.Rmd'
    - 'content/cv/CV_HEJBLUM.Rmd'
    - '.github/workflows/renderCV.yaml'
    - 'content/cv/AllConferences_Seminar_Presentation_Summary.xlsx'
    - 'content/cv/CVhelperfunctions.R'

name: Render CV

jobs:
  render:
    runs-on: ubuntu-latest
    concurrency:
      group: pkgdown-${{ github.event_name != 'pull_request' || github.run_id }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: 'latest' # The pandoc version to download (if necessary) and use.
      - uses: r-lib/actions/setup-tinytex@v2

      - name: Install additional LaTeX packages
        run: |
          tlmgr update --self
          tlmgr install academicons arydshln breakurl colortbl dejavu fancyhdr fontawesome5 fp microtype multirow pgf soul
          tlmgr list --only-installed

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true


      - name: Set site library path
        run: |
          # Set site library path
          cat("::group::Set site library path\n")
          if (Sys.getenv("RENV_PROJECT") != "") {
            message("renv project detected, no need to set R_LIBS_SITE")
            cat(sprintf("R_LIB_FOR_PAK=%s\n", .libPaths()[1]), file = Sys.getenv("GITHUB_ENV"), append = TRUE)
            q("no")
          }
          lib <- Sys.getenv("R_LIBS_SITE")
          if (lib == "") {
            lib <- file.path(dirname(.Library), "site-library")
            cat(sprintf("R_LIBS_SITE=%s\n", lib), file = Sys.getenv("GITHUB_ENV"), append = TRUE)
            cat(sprintf("R_LIB_FOR_PAK=%s\n", lib), file = Sys.getenv("GITHUB_ENV"), append = TRUE)
            message("Setting R_LIBS_SITE to ", lib)
          } else {
            message("R_LIBS_SITE is already set to ", lib)
            cat(sprintf("R_LIB_FOR_PAK=%s\n", strsplit(lib, .Platform$path.sep)[[1]][[1]]), file = Sys.getenv("GITHUB_ENV"), append = TRUE)
          }
          if (nchar("${{ env.R_LIBS_USER && 'ok' || '' }}") == 0) {
            message("R_LIBS_USER GH env var is unset, setting now: ", Sys.getenv("R_LIBS_USER"))
            cat(sprintf("R_LIBS_USER=%s\n", Sys.getenv("R_LIBS_USER")), file = Sys.getenv("GITHUB_ENV"), append = TRUE)
          } else {
            message("R_LIBS_USER GH env var is already set: ", Sys.getenv("R_LIBS_USER"))
          }
          cat("::endgroup::\n")
        shell: Rscript {0}

      - name: Install pak (Unix)
        run: |
          # Install pak
          echo "::group::Install pak"
          if which sudo >/dev/null; then SUDO="sudo -E --preserve-env=PATH env"; else SUDO=""; fi
          $SUDO R -q -e 'dir.create(Sys.getenv("R_LIB_FOR_PAK"), recursive = TRUE, showWarnings = FALSE)'
          $SUDO R -q -e 'install.packages("pak", lib = Sys.getenv("R_LIB_FOR_PAK"), repos = sprintf("https://r-lib.github.io/p/pak/%s/%s/%s/%s", "stable", .Platform$pkgType, R.Version()$os, R.Version()$arch))'
          echo "::endgroup::"
        shell: bash

      - name: dependencies
        run: |
          install.packages(c("curl", "pkgdepends")
          pak::pkg_install(c("any::curl", "any::knitr", "any::rmarkdown", "github::borishejblum/vitae", "any::tibble", "any::dplyr", "any::lubridate", "any::readxl", "any::httr", "any::stringr"))
        shell: Rscript {0}

      - name: Build CV
        run: rmarkdown::render("content/cv/CV_HEJBLUM.Rmd")
        shell: Rscript {0}

      - name: update static publication list
        run: knitr::knit(input = "content/publication_list/_index.Rmd", output = "content/publication_list/_index.md")
        shell: Rscript {0}

      - name: Commit built CV and publist
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add content/cv/CV_HEJBLUM.pdf
          git add content/publication_list/_index.md
          git commit -m 'auto CV and publist render'
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true
